<?php

/****************************************************************************
 ********************** CASH ON DELIVERY EXERCISE ***************************
 ***************************************************************************/

/**
 * Implements hook_commerce_payment_method_info().
 */
function cg_training_commerce_payment_method_info() {
  $payment_methods = array();

  // Exposes a new payment method.
  $payment_methods['cod'] = array(
    'title' => t('Cash on delivery'),
    'description' => t('Allows your user to pay there order by cash when they receive the delivery.'),
    'active' => TRUE,
  );

  return $payment_methods;
}

/**
 * Payment method callback: form displayed as content for the payment method
 * form.
 */
function cod_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  return array('#markup' => t('Allows the user to pay by cash on the delivery.'));
}

/**
 * Payment method callback: callback processed when the payment form is
 * submitted in the checkout process.
 */
function cod_submit_form_submit($payment_method, $pane_form, $pane_values, $order, $charge) {
  // Creates a payment transaction for the specified charge amount in the
  // pending status.
  $transaction = commerce_payment_transaction_new('cod', $order->order_id);
  $transaction->instance_id = $payment_method['instance_id'];
  $transaction->amount = $charge['amount'];
  $transaction->currency_code = $charge['currency_code'];
  $transaction->status = COMMERCE_PAYMENT_STATUS_PENDING;
  $transaction->message = t('Cash on delivery. Waiting for confirmation of the payment.');
  commerce_payment_transaction_save($transaction);
}

/**
 * Implements hook_menu().
 */
function cg_training_menu() {
  $items = array();

  // Add a menu item for capturing payment.
  $items['admin/commerce/orders/%commerce_order/payment/%commerce_payment_transaction/cod-confirm'] = array(
    'title' => 'Confirm payment',
    'page callback' => 'cg_training_confirm_payment',
    'page arguments' => array(3, 5),
    'access callback' => 'cg_training_access_payment',
    'access arguments' => array(3, 5),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_INLINE,
    'weight' => 2,
  );

  return $items;
}

/**
 * Access callback, it must return FALSE when the capturing link should be
 * hidden.
 */
function cg_training_access_payment($order, $transaction) {
  // Return FALSE if the transaction isn't related to the cash on delivery
  // payment method and if the payment transaction isn't pending.
  if ($transaction->payment_method != 'cod' || $transaction->status != COMMERCE_PAYMENT_STATUS_PENDING) {
    return FALSE;
  }

  // Allow access if the user can update payments on this transaction.
  return commerce_payment_transaction_access('update', $transaction);
}

/**
 * Execution callback.
 */
function cg_training_confirm_payment($order, $transaction) {
  // Update the status of the payment.
  $transaction->status = COMMERCE_PAYMENT_STATUS_SUCCESS;
  $transaction->message = t('Cash on delivery. Payment confirmed.');
  commerce_payment_transaction_save($transaction);

  drupal_set_message('Payment ok.');
  drupal_goto('admin/commerce/orders/' . $order->order_id . '/payment');
  exit;
}
